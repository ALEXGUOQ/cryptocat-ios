//
//  TBMessage.m
//  Cryptocat
//
//  Created by Thomas Balthazar on 12/11/13.
//  Copyright (c) 2013 Thomas Balthazar. All rights reserved.
//
//  This file is part of Cryptocat for iOS.
//
//  Cryptocat for iOS is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  Cryptocat for iOS is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with Cryptocat for iOS.  If not, see <http://www.gnu.org/licenses/>.
//

#import "TBMessage.h"
#import "TBBuddy.h"
#import "TBMessageView.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@interface TBMessage ()

@property (nonatomic, strong, readwrite) NSAttributedString *attributedText;

- (void)updateAttributedText;

@end

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@implementation TBMessage

////////////////////////////////////////////////////////////////////////////////////////////////////
- (id)init {
  if (self=[super init]) {
    _text = nil;
    _attributedText = nil;
    _warningText = nil;
    _sender = nil;
    _isErrorMessage = NO;
  }
  
  return self;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (BOOL)isWarningMessage {
  return self.warningText!=nil;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setText:(NSString *)text {
  _text = text;
  [self updateAttributedText];
}

////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setSender:(TBBuddy *)sender {
  _sender = sender;
  [self updateAttributedText];
}

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Private Methods

////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * When I have the sender and text of a message, I compute the attributed string that will be 
 * passed to the textView for the chat cells and used for cell height computation.
 */
- (void)updateAttributedText {
  if (self.text!=nil && self.sender!=nil) {
    self.attributedText = [TBMessageView attributedStringForSenderName:self.sender.nickname
                                                               message:self.text];
  }
}

@end
